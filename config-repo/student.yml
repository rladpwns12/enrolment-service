api:

  student:
    common:
      version: 1.0.0
      title: Student API
      description: RESTful API student
      termsOfServiceUrl: terms of url
      license: all rights reserved yejun kim
      licenseUrl: https://github.com/rladpwns12

      contact:
        name: yejun kim
        url: https://github.com/rladpwns12
        email: rladpwns12@gmail.com

    create-student:
      description: Creates a student
      notes: |
        # Normal response
        Student information will save

        # Expected error responses
        1. If a student with the same student id as specified in the posted information already exists,
          an <b>422 - Unprocessable Entity</b> error with a "duplicate key" error message will be returned

    get-student:
      description: Returns a student information of the specified student id
      notes: |
        # Normal response
        If the requested student id is found the method will return student information

        # Expected partial and error responses
        If no student information is found, a <b>404 - Not Found</b> error will be returned

    get-students:
      description: Returns students information of the specified student ids
      notes: |
        # Normal response
        If the requested student ids is found the method will return students information

        # Expected partial and error responses
        If no student information is found, a <b>404 - Not Found</b> error will be returned

    update-student:
      description: Update a student
      notes: |
        # Normal response
        Student information will update

        # Expected error responses
        1. If a student with the same email as specified in the posted information already exists,
          an <b>422 - Unprocessable Entity</b> error with a "duplicate key" error message will be returned

    delete-student:
      description: Deletes a student
      notes: |
        # Normal response
        Entities for student information related to the specificed studentId will be deleted.
        The implementation of the delete method is idempotent, i.e. it can be called several times with the same response.
        This means that a delete request of a non existing student will return <b>200 Ok</b>.


server.port: 7001
server.error.include-message: always

spring.application.name: student

spring.data.mongodb:
  host: localhost
  port: 27017
  database: student-db

spring.cloud.stream:
  defaultBinder: rabbit
  default.contentType: application/json
  bindings:
    output-courses:
      destination: courses
      producer:
        required-groups: auditGroup
    output-enrolments:
      destination: enrolments
      producer:
        required-groups: auditGroup
    input:
      destination: students
      group: studentsGroup

spring.cloud.stream.bindings.input.consumer:
  maxAttempts: 3
  backOffInitialInterval: 500
  backOffMaxInterval: 1000
  backOffMultiplier: 2.0

spring.cloud.stream.rabbit.bindings.input.consumer:
  autoBindDlq: true
  republishToDlq: true

spring.cloud.stream.kafka.bindings.input.consumer:
  enableDlq: true


management.health.circuitbreakers.enabled: true


logging:
  level:
    root: INFO
    yejun: DEBUG
    org.springframework.web.server.adapter.HttpWebHandlerAdapter: TRACE
    org.springframework.data.mongodb.core.MongoTemplate: DEBUG

---
spring.profiles: docker

server.port: 80

spring.data.mongodb.host: mongodb

spring.rabbitmq.host: rabbitmq

---
spring.profiles: streaming_partitioned

spring.cloud.stream.bindings.input.consumer:
  partitioned: true
  instanceCount: 2

spring.cloud.stream.bindings.output-courses.producer:
  partition-key-expression: payload.key
  partition-count: 2

spring.cloud.stream.bindings.output-enrolments.producer:
  partition-key-expression: payload.key
  partition-count: 2
---

spring.profiles: streaming_instance_0
spring.cloud.stream.bindings.input.consumer.instanceIndex: 0

---
spring.profiles: streaming_instance_1
spring.cloud.stream.bindings.input.consumer.instanceIndex: 1

---
spring.profiles: prod

spring.data.mongodb.host: 172.17.0.1

logging:
  level:
    root: WARN
    yejun: WARN
    org.springframework.web.server.adapter.HttpWebHandlerAdapter: WARN
    org.springframework.data.mongodb.core.MongoTemplate: WARN




